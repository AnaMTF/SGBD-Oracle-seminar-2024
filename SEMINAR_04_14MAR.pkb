-- 14/03/2024 Seminar 4
-- VAI DE VIATA MEA

-- SET SERVEROUTPUT ON

DECLARE
    TYPE T_VAL IS TABLE OF VARCHAR2(100) INDEX BY PLS_INTEGER;    
    V T_VAL;
BEGIN
    SELECT FIRST_NAME||' '||LAST_NAME AS DD BULK COLLECT INTO V FROM EMPLOYEES WHERE DEPARTMENT_ID IN (30, 50) ORDER BY EMPLOYEE_ID;

    V.DELETE(10, 15); -- DELETE BETWEEN INDICES 10 AND 15 (10 AND 15 ARE INCLUDED);
    
    DBMS_OUTPUT.PUT_LINE(V.COUNT);
    DBMS_OUTPUT.PUT_LINE(V.FIRST);
    DBMS_OUTPUT.PUT_LINE(V.LAST);
    
    FOR I IN V.FIRST..V.LAST LOOP
        IF V.EXISTS(I) THEN
            DBMS_OUTPUT.PUT_LINE(I||'->'||V(I));
        END IF;
    END LOOP;
END;
/

DECLARE
    TYPE T_VAL IS TABLE OF VARCHAR2(100) INDEX BY PLS_INTEGER;    
    V T_VAL;
    
    I PLS_INTEGER;
BEGIN
    SELECT FIRST_NAME||' '||LAST_NAME AS DD BULK COLLECT INTO V FROM EMPLOYEES WHERE DEPARTMENT_ID IN (30, 50) ORDER BY EMPLOYEE_ID;

    V.DELETE(10, 15); -- DELETE BETWEEN INDICES 10 AND 15 (10 AND 15 ARE INCLUDED);
    
    I := V.FIRST; -- BETTER APPROACH
    WHILE I IS NOT NULL LOOP
        DBMS_OUTPUT.PUT_LINE(I||'->'||V(I));
        I := V.NEXT(I);
    END LOOP;
END;
/

DECLARE
    TYPE T_VAL IS TABLE OF VARCHAR2(100) INDEX BY PLS_INTEGER;    
    V T_VAL;
    
    I PLS_INTEGER;
BEGIN
    V(-1000):='JOHN';
    V(1200):='MARY';
    V(14000):='MARK';
    V(1234567890):='ALICE';
    
    I := V.FIRST; -- BETTER APPROACH
    WHILE I IS NOT NULL LOOP
        DBMS_OUTPUT.PUT_LINE(I||'->'||V(I));
        I := V.NEXT(I);
    END LOOP;
END;
/

-- USING A PL/SQL BLOCK DISPLAY THE DEPARTMENT NAMES AND THE AVERAGE SALARIES FOR ALL DEPARTMENTS WITH A HIGHER NUMBER OF EMPLOYEES THAN DEPARTMENT 20
-- SELECT EMPLOYEE_ID, EMPLOYEES.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME FROM EMPLOYEES, DEPARTMENTS WHERE departments.department_id = EMPLOYEES.DEPARTMENT_ID;
-- SELECT EMPLOYEE_ID FROM EMPLOYEES;

DECLARE
    TYPE T_VAL1 IS TABLE OF NUMBER(10,2) INDEX BY PLS_INTEGER;
    TYPE T_VAL2 IS TABLE OF VARCHAR2(200) INDEX BY PLS_INTEGER;
    
    V1 T_VAL1;
    V2 T_VAL2;
    
    I PLS_INTEGER;    
BEGIN
    SELECT 
        COUNT(EMPLOYEES.DEPARTMENT_ID) AS DD 
    BULK COLLECT INTO
        V1
    FROM
        EMPLOYEES,
        DEPARTMENTS 
    WHERE 
        departments.department_id = EMPLOYEES.DEPARTMENT_ID
    GROUP BY
        DEPARTMENTS.DEPARTMENT_NAME
    ORDER BY
        COUNT(EMPLOYEES.DEPARTMENT_ID)
        DESC;
        
    SELECT 
        AVG(EMPLOYEES.SALARY)||' '||DEPARTMENTS.DEPARTMENT_NAME AS BB
    BULK COLLECT INTO
        V2
    FROM
        EMPLOYEES,
        DEPARTMENTS 
    WHERE 
        departments.department_id = EMPLOYEES.DEPARTMENT_ID
    GROUP BY
        DEPARTMENTS.DEPARTMENT_NAME
    ORDER BY
        COUNT(EMPLOYEES.DEPARTMENT_ID)
        DESC;
        
    I := V1.FIRST;
    WHILE I IS NOT NULL LOOP
        IF(V1(I) > 20) THEN
            DBMS_OUTPUT.PUT_LINE(V2(I));
        END IF;
        I := V1.NEXT(I);
    END LOOP;
END; -- NU MERGE CHIAR OK...
/

DECLARE
    TYPE T_VAL IS TABLE OF VARCHAR2(100) INDEX BY PLS_INTEGER;    
    V T_VAL;
BEGIN
    SELECT
        UPPER(DEPARTMENT_NAME)||' HAS AN AVERAGE SALARY OF '||TRUNC(AVG(SALARY), 2)
    BULK COLLECT INTO
        V -- `BULK COLLECT` IS REQUIRED WHEN POPULATING A COLLECTION
    FROM
        EMPLOYEES E
    JOIN
        DEPARTMENTS D
    ON
        E.DEPARTMENT_ID=D.DEPARTMENT_ID 
    GROUP BY
        DEPARTMENT_NAME
    HAVING
        COUNT(*) > (SELECT COUNT(*) FROM EMPLOYEES WHERE DEPARTMENT_ID = 20);
    
    FOR I IN V.FIRST..V.LAST LOOP
        IF V.EXISTS(I) THEN
            DBMS_OUTPUT.PUT_LINE(V(I));
        END IF;
    END LOOP;
END;
/

DECLARE
    TYPE T_RES IS RECORD(
        DEPARTMENT_NAME DEPARTMENTS.DEPARTMENT_NAME%TYPE,
        SALARY NUMBER(10, 2)
    );
    
    TYPE T_VAL IS TABLE OF T_RES INDEX BY PLS_INTEGER;    
    V T_VAL;
BEGIN
    SELECT
        UPPER(DEPARTMENT_NAME), ROUND(AVG(SALARY), 2)
    BULK COLLECT INTO
        V -- `BULK COLLECT` IS REQUIRED WHEN POPULATING A COLLECTION
    FROM
        EMPLOYEES E
    JOIN
        DEPARTMENTS D
    ON
        E.DEPARTMENT_ID=D.DEPARTMENT_ID 
    GROUP BY
        DEPARTMENT_NAME
    HAVING
        COUNT(*) > (SELECT COUNT(*) FROM EMPLOYEES WHERE DEPARTMENT_ID = 20);
    
    FOR I IN V.FIRST..V.LAST LOOP
        IF V.EXISTS(I) THEN
            DBMS_OUTPUT.PUT_LINE(V(I).DEPARTMENT_NAME||' HAS AN AVERAGE SALARY OF '||V(I).SALARY);
        END IF;
    END LOOP;
END;
/

--SELECT DEPARTMENT_NAME, AVG(SALARY) FROM EMPLOYEES E JOIN DEPARTMENTS D ON E.DEPARTMENT_ID=D.DEPARTMENT_ID GROUP BY DEPARTMENT_NAME HAVING COUNT(*) > (SELECT COUNT(*) FROM EMPLOYEES WHERE DEPARTMENT_ID = 20);
